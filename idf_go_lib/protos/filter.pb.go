// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: filter.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterExpression_ExpressionType int32

const (
	FilterExpression_kScope    FilterExpression_ExpressionType = 0
	FilterExpression_kNonScope FilterExpression_ExpressionType = 1
)

// Enum value maps for FilterExpression_ExpressionType.
var (
	FilterExpression_ExpressionType_name = map[int32]string{
		0: "kScope",
		1: "kNonScope",
	}
	FilterExpression_ExpressionType_value = map[string]int32{
		"kScope":    0,
		"kNonScope": 1,
	}
)

func (x FilterExpression_ExpressionType) Enum() *FilterExpression_ExpressionType {
	p := new(FilterExpression_ExpressionType)
	*p = x
	return p
}

func (x FilterExpression_ExpressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterExpression_ExpressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_filter_proto_enumTypes[0].Descriptor()
}

func (FilterExpression_ExpressionType) Type() protoreflect.EnumType {
	return &file_filter_proto_enumTypes[0]
}

func (x FilterExpression_ExpressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FilterExpression_ExpressionType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FilterExpression_ExpressionType(num)
	return nil
}

// Deprecated: Use FilterExpression_ExpressionType.Descriptor instead.
func (FilterExpression_ExpressionType) EnumDescriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{1, 0}
}

type FilterExpression_Operator int32

const (
	FilterExpression_kIn    FilterExpression_Operator = 0
	FilterExpression_kNotIn FilterExpression_Operator = 1
	FilterExpression_kInAll FilterExpression_Operator = 2 //Used for scope type only
)

// Enum value maps for FilterExpression_Operator.
var (
	FilterExpression_Operator_name = map[int32]string{
		0: "kIn",
		1: "kNotIn",
		2: "kInAll",
	}
	FilterExpression_Operator_value = map[string]int32{
		"kIn":    0,
		"kNotIn": 1,
		"kInAll": 2,
	}
)

func (x FilterExpression_Operator) Enum() *FilterExpression_Operator {
	p := new(FilterExpression_Operator)
	*p = x
	return p
}

func (x FilterExpression_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterExpression_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_filter_proto_enumTypes[1].Descriptor()
}

func (FilterExpression_Operator) Type() protoreflect.EnumType {
	return &file_filter_proto_enumTypes[1]
}

func (x FilterExpression_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FilterExpression_Operator) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FilterExpression_Operator(num)
	return nil
}

// Deprecated: Use FilterExpression_Operator.Descriptor instead.
func (FilterExpression_Operator) EnumDescriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{1, 1}
}

type FilterExpression_GroupType int32

const (
	FilterExpression_kNone      FilterExpression_GroupType = 0
	FilterExpression_kAll       FilterExpression_GroupType = 1
	FilterExpression_kSelfOwned FilterExpression_GroupType = 2
)

// Enum value maps for FilterExpression_GroupType.
var (
	FilterExpression_GroupType_name = map[int32]string{
		0: "kNone",
		1: "kAll",
		2: "kSelfOwned",
	}
	FilterExpression_GroupType_value = map[string]int32{
		"kNone":      0,
		"kAll":       1,
		"kSelfOwned": 2,
	}
)

func (x FilterExpression_GroupType) Enum() *FilterExpression_GroupType {
	p := new(FilterExpression_GroupType)
	*p = x
	return p
}

func (x FilterExpression_GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterExpression_GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_filter_proto_enumTypes[2].Descriptor()
}

func (FilterExpression_GroupType) Type() protoreflect.EnumType {
	return &file_filter_proto_enumTypes[2]
}

func (x FilterExpression_GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FilterExpression_GroupType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FilterExpression_GroupType(num)
	return nil
}

// Deprecated: Use FilterExpression_GroupType.Descriptor instead.
func (FilterExpression_GroupType) EnumDescriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{1, 2}
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required - uuid for this filter
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// Required - uuid for the entity that uses this filter
	EntityUuid *string `protobuf:"bytes,2,opt,name=entity_uuid,json=entityUuid" json:"entity_uuid,omitempty"`
	// Required - kind of the entity that uses this filter
	EntityKind *string `protobuf:"bytes,3,opt,name=entity_kind,json=entityKind" json:"entity_kind,omitempty"`
	// List of filter expressions
	FilterExpressions []*FilterExpression `protobuf:"bytes,4,rep,name=filter_expressions,json=filterExpressions" json:"filter_expressions,omitempty"`
	// Optional - set if Filter is immutable.
	Immutable *bool `protobuf:"varint,5,opt,name=immutable,def=0" json:"immutable,omitempty"`
	// Required - Create time in usecs
	CreateTimeUsecs *uint64 `protobuf:"fixed64,6,opt,name=create_time_usecs,json=createTimeUsecs" json:"create_time_usecs,omitempty"`
	// Required - Last update time in usecs
	LastUpdatedTimeUsecs *uint64 `protobuf:"fixed64,7,opt,name=last_updated_time_usecs,json=lastUpdatedTimeUsecs" json:"last_updated_time_usecs,omitempty"`
}

// Default values for Filter fields.
const (
	Default_Filter_Immutable = bool(false)
)

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{0}
}

func (x *Filter) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *Filter) GetEntityUuid() string {
	if x != nil && x.EntityUuid != nil {
		return *x.EntityUuid
	}
	return ""
}

func (x *Filter) GetEntityKind() string {
	if x != nil && x.EntityKind != nil {
		return *x.EntityKind
	}
	return ""
}

func (x *Filter) GetFilterExpressions() []*FilterExpression {
	if x != nil {
		return x.FilterExpressions
	}
	return nil
}

func (x *Filter) GetImmutable() bool {
	if x != nil && x.Immutable != nil {
		return *x.Immutable
	}
	return Default_Filter_Immutable
}

func (x *Filter) GetCreateTimeUsecs() uint64 {
	if x != nil && x.CreateTimeUsecs != nil {
		return *x.CreateTimeUsecs
	}
	return 0
}

func (x *Filter) GetLastUpdatedTimeUsecs() uint64 {
	if x != nil && x.LastUpdatedTimeUsecs != nil {
		return *x.LastUpdatedTimeUsecs
	}
	return 0
}

type FilterExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpressionType *FilterExpression_ExpressionType `protobuf:"varint,1,opt,name=expression_type,json=expressionType,enum=categories.protobuf.FilterExpression_ExpressionType" json:"expression_type,omitempty"`
	// lhs, type of the scope (CATEGORY, PROJECT, CLUSTER) or entity
	LhsEntityType *string `protobuf:"bytes,2,opt,name=lhs_entity_type,json=lhsEntityType" json:"lhs_entity_type,omitempty"`
	// operator type
	Operator *FilterExpression_Operator `protobuf:"varint,3,opt,name=operator,enum=categories.protobuf.FilterExpression_Operator" json:"operator,omitempty"`
	// rhs, can be three types:
	//  1. entity_uuids that is encoded in to a single string for IDF query purpose
	//     For instance, ["uuid2", "uuid1"] will be stored as "uuid1:uuid2", UUIDs
	//     are sorted in order to support substring matches.
	//  2. "self_owned"
	//  3. "all"
	//
	// Types that are assignable to RhsEntities:
	//
	//	*FilterExpression_GroupType_
	//	*FilterExpression_EntityUuids
	RhsEntities isFilterExpression_RhsEntities `protobuf_oneof:"rhs_entities"`
	// Opaque field which can be used to add extra details about the filter.
	FilterDetails *string `protobuf:"bytes,6,opt,name=filter_details,json=filterDetails" json:"filter_details,omitempty"`
}

func (x *FilterExpression) Reset() {
	*x = FilterExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpression) ProtoMessage() {}

func (x *FilterExpression) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpression.ProtoReflect.Descriptor instead.
func (*FilterExpression) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{1}
}

func (x *FilterExpression) GetExpressionType() FilterExpression_ExpressionType {
	if x != nil && x.ExpressionType != nil {
		return *x.ExpressionType
	}
	return FilterExpression_kScope
}

func (x *FilterExpression) GetLhsEntityType() string {
	if x != nil && x.LhsEntityType != nil {
		return *x.LhsEntityType
	}
	return ""
}

func (x *FilterExpression) GetOperator() FilterExpression_Operator {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return FilterExpression_kIn
}

func (m *FilterExpression) GetRhsEntities() isFilterExpression_RhsEntities {
	if m != nil {
		return m.RhsEntities
	}
	return nil
}

func (x *FilterExpression) GetGroupType() FilterExpression_GroupType {
	if x, ok := x.GetRhsEntities().(*FilterExpression_GroupType_); ok {
		return x.GroupType
	}
	return FilterExpression_kNone
}

func (x *FilterExpression) GetEntityUuids() string {
	if x, ok := x.GetRhsEntities().(*FilterExpression_EntityUuids); ok {
		return x.EntityUuids
	}
	return ""
}

func (x *FilterExpression) GetFilterDetails() string {
	if x != nil && x.FilterDetails != nil {
		return *x.FilterDetails
	}
	return ""
}

type isFilterExpression_RhsEntities interface {
	isFilterExpression_RhsEntities()
}

type FilterExpression_GroupType_ struct {
	GroupType FilterExpression_GroupType `protobuf:"varint,4,opt,name=group_type,json=groupType,enum=categories.protobuf.FilterExpression_GroupType,oneof"`
}

type FilterExpression_EntityUuids struct {
	EntityUuids string `protobuf:"bytes,5,opt,name=entity_uuids,json=entityUuids,oneof"`
}

func (*FilterExpression_GroupType_) isFilterExpression_RhsEntities() {}

func (*FilterExpression_EntityUuids) isFilterExpression_RhsEntities() {}

var File_filter_proto protoreflect.FileDescriptor

var file_filter_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x22, 0xbc, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x54, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x09, 0x69, 0x6d,
	0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x63, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x6c, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65,
	0x63, 0x73, 0x22, 0x9f, 0x04, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x68, 0x73, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f,
	0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0c,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2b, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x6b, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x4e, 0x6f, 0x6e, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x10, 0x01, 0x22, 0x2b, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x07, 0x0a, 0x03, 0x6b, 0x49, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x6b, 0x4e,
	0x6f, 0x74, 0x49, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x6b, 0x49, 0x6e, 0x41, 0x6c, 0x6c,
	0x10, 0x02, 0x22, 0x30, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x6b, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x6b, 0x41,
	0x6c, 0x6c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x53, 0x65, 0x6c, 0x66, 0x4f, 0x77, 0x6e,
	0x65, 0x64, 0x10, 0x02, 0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x68, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
}

var (
	file_filter_proto_rawDescOnce sync.Once
	file_filter_proto_rawDescData = file_filter_proto_rawDesc
)

func file_filter_proto_rawDescGZIP() []byte {
	file_filter_proto_rawDescOnce.Do(func() {
		file_filter_proto_rawDescData = protoimpl.X.CompressGZIP(file_filter_proto_rawDescData)
	})
	return file_filter_proto_rawDescData
}

var file_filter_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_filter_proto_goTypes = []any{
	(FilterExpression_ExpressionType)(0), // 0: categories.protobuf.FilterExpression.ExpressionType
	(FilterExpression_Operator)(0),       // 1: categories.protobuf.FilterExpression.Operator
	(FilterExpression_GroupType)(0),      // 2: categories.protobuf.FilterExpression.GroupType
	(*Filter)(nil),                       // 3: categories.protobuf.Filter
	(*FilterExpression)(nil),             // 4: categories.protobuf.FilterExpression
}
var file_filter_proto_depIdxs = []int32{
	4, // 0: categories.protobuf.Filter.filter_expressions:type_name -> categories.protobuf.FilterExpression
	0, // 1: categories.protobuf.FilterExpression.expression_type:type_name -> categories.protobuf.FilterExpression.ExpressionType
	1, // 2: categories.protobuf.FilterExpression.operator:type_name -> categories.protobuf.FilterExpression.Operator
	2, // 3: categories.protobuf.FilterExpression.group_type:type_name -> categories.protobuf.FilterExpression.GroupType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_filter_proto_init() }
func file_filter_proto_init() {
	if File_filter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filter_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FilterExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_filter_proto_msgTypes[1].OneofWrappers = []any{
		(*FilterExpression_GroupType_)(nil),
		(*FilterExpression_EntityUuids)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filter_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_filter_proto_goTypes,
		DependencyIndexes: file_filter_proto_depIdxs,
		EnumInfos:         file_filter_proto_enumTypes,
		MessageInfos:      file_filter_proto_msgTypes,
	}.Build()
	File_filter_proto = out.File
	file_filter_proto_rawDesc = nil
	file_filter_proto_goTypes = nil
	file_filter_proto_depIdxs = nil
}
